{"version":3,"file":"static/js/774.1ded5dad.chunk.js","mappings":"sQACA,EAA4B,2BAA5B,EAA8D,sBAA9D,EAA4F,uBAA5F,EAA4H,wB,SC2D5H,EAtDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,CACrCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAgBC,EAAhB,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAW,SAACK,GAAD,eAAC,UAAoBA,GAArB,IAAgCR,SAAS,OAFtC,UAGOS,EAAAA,EAAAA,IAAgBL,GAHvB,OAGRM,EAHQ,OAIdP,GAAW,SAACK,GAAD,eAAC,UACPA,GADM,IAETT,MAAOW,EAAOC,QACdX,SAAS,OAPG,gDAUdG,GAAW,SAACK,GAAD,eAAC,UACPA,GADM,IAETP,MAAO,KAAMW,QACbZ,SAAS,OAbG,yDAAH,qDAiBfO,MACC,CAACH,IAEJ,IAAMS,EAAWX,EAAQH,MAAMe,KAAI,SAACC,GAAD,OACjC,2BACE,eAAGC,UAAWC,EAAd,qBAAiCF,EAAKG,WACtC,uBAAIH,EAAKI,YAFFJ,EAAKX,OAMRJ,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAEjB,OACE,iBAAKe,UAAWC,EAAhB,UACGjB,IAAW,sCACXC,IACC,4GAKF,eAAIe,UAAWC,EAAf,sBACA,eAAID,UAAWC,EAAf,SAAwBJ,S,iMCrDxBO,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAS,mCAAG,sGACAL,EAASM,IAAI,sBADb,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKhB,SAFW,2CAAH,qDAKTiB,EAAY,mCAAG,WAAOxB,GAAP,yFACHgB,EAASM,IAAT,gBAAsBtB,IADnB,uBAClBuB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAe,mCAAG,WAAOzB,GAAP,yFACNgB,EAASM,IAAT,gBAAsBtB,EAAtB,aADM,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKflB,EAAe,mCAAG,WAAOL,GAAP,yFACNgB,EAASM,IAAT,gBAAsBtB,EAAtB,aADM,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAgB,mCAAG,WAAOC,GAAP,yFACPX,EAASM,IAAT,6BAAmCK,IAD5B,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,EAAKhB,SAFkB,2CAAH","sources":["webpack://react-homework-template/./src/modules/Reviews/reviews.module.css?b2ff","modules/Reviews/Reviews.jsx","shared/services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"reviews_container__rOlUX\",\"list\":\"reviews_list__oZBcb\",\"title\":\"reviews_title__QxhAn\",\"author\":\"reviews_author__7V6dN\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getMovieReviews } from \"shared/services/movies\";\nimport s from \"./reviews.module.css\";\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setReviews((prevState) => ({ ...prevState, loading: true }));\n        const result = await getMovieReviews(id);\n        setReviews((prevState) => ({\n          ...prevState,\n          items: result.results,\n          loading: false,\n        }));\n      } catch (error) {\n        setReviews((prevState) => ({\n          ...prevState,\n          error: error.message,\n          loading: false,\n        }));\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const elements = reviews.items.map((item) => (\n    <li key={item.id}>\n      <p className={s.author}>Author: {item.author}</p>\n      <p>{item.content}</p>\n    </li>\n  ));\n\n  const { loading, error } = reviews;\n\n  return (\n    <div className={s.container}>\n      {loading && <p>...loading</p>}\n      {error && (\n        <p>\n          Sorry, we don't have info about this film. Please, try again later ðŸ–¤\n        </p>\n      )}\n\n      <h3 className={s.title}>Reviews</h3>\n      <ul className={s.list}>{elements}</ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"e074371f26d85cdd5e4539421aae2fa2\",\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get(\"trending/movie/day\");\n  return data.results;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query) => {\n  const { data } = await instance.get(`search/movie?query=${query}`);\n  return data.results;\n};\n"],"names":["useState","items","loading","error","reviews","setReviews","id","useParams","useEffect","fetchCast","prevState","getMovieReviews","result","results","message","elements","map","item","className","s","author","content","instance","axios","baseURL","params","api_key","getMovies","get","data","getMovieById","getMovieCredits","getMovieBySearch","query"],"sourceRoot":""}