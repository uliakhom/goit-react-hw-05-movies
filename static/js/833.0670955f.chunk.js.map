{"version":3,"file":"static/js/833.0670955f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MoviesList/moviesList.module.css?be87","modules/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/modules/MovieSearchForm/movieSearchForm.module.css?336d","modules/MovieSearchForm/MovieSearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","shared/services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__2kWPB\",\"item\":\"moviesList_item__XvK8-\",\"link\":\"moviesList_link__p6Zt+\"};","import { Link, useLocation } from \"react-router-dom\";\n\nimport s from \"./moviesList.module.css\";\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title, name }) => (\n    <li key={id} className={s.item}>\n      <Link state={{ from: location }} to={`/movies/${id}`} className={s.link}>\n        {title ?? name}\n      </Link>\n    </li>\n  ));\n\n  return <ul className={s.list}>{elements}</ul>;\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  items: [],\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"movieSearchForm_form__D-hgV\",\"input\":\"movieSearchForm_input__1kdFO\",\"btn\":\"movieSearchForm_btn__q83gA\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./movieSearchForm.module.css\";\n\nconst MovieSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    query: \"\",\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ query: \"\" });\n  };\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit} className={s.form}>\n      <input\n        value={state.query}\n        name=\"query\"\n        onChange={handleChange}\n        type=\"text\"\n        className={s.input}\n      />\n      <button type=\"button\" onClick={handleSubmit} className={s.btn}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default MovieSearchForm;\n\nMovieSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MoviesList from \"modules/MoviesList\";\nimport MovieSearchForm from \"modules/MovieSearchForm\";\n\nimport { getMovieBySearch } from \"shared/services/movies\";\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setMovies((prevState) => ({ ...prevState, loading: true }));\n      try {\n        const result = await getMovieBySearch(query);\n        setMovies((prevState) => ({\n          ...prevState,\n          loading: false,\n          items: result,\n        }));\n      } catch (error) {\n        setMovies((prevState) => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    if (query) {\n      fetchMovies();\n    }\n  }, [query]);\n\n  const onSubmit = ({ query }) => setSearchParams({ query });\n\n  return (\n    <>\n      <MovieSearchForm onSubmit={onSubmit} />\n      <MoviesList items={movies.items} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"e074371f26d85cdd5e4539421aae2fa2\",\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get(\"trending/movie/day\");\n  return data.results;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query) => {\n  const { data } = await instance.get(`search/movie?query=${query}`);\n  return data.results;\n};\n"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","name","className","s","state","from","to","defaultProps","onSubmit","useState","query","setState","handleSubmit","e","preventDefault","action","value","onChange","target","prevState","type","onClick","loading","error","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getMovieBySearch","result","message","instance","axios","baseURL","params","api_key","getMovies","data","results","getMovieById","getMovieCredits","getMovieReviews"],"sourceRoot":""}